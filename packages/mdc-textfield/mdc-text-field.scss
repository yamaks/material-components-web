//
// Copyright 2017 Google Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

@import "./functions";
@import "./mixins";
@import "./variables";
@import "@material/animation/variables";
@import "@material/ripple/common";
@import "@material/ripple/mixins";
@import "@material/rtl/mixins";
@import "@material/theme/variables";
@import "@material/theme/mixins";
@import "@material/typography/mixins";
@import "@material/typography/variables";
@import "./bottom-line/mdc-text-field-bottom-line";
@import "./helper-text/mdc-text-field-helper-text";
@import "./icon/mdc-text-field-icon";
@import "./label/mdc-text-field-label";
@import "./outline/mdc-text-field-outline";
@include mdc-text-field-invalid-label-shake-keyframes_(standard, 100%);
@include mdc-text-field-invalid-label-shake-keyframes_(box, 50%);
@include mdc-text-field-invalid-label-shake_keyframes_(outlined, 130%);
@include mdc-text-field-invalid-label-shake_keyframes_(outlined-dense, 138%, .923);

// postcss-bem-linter: define text-field

.mdc-text-field {
  @include mdc-text-field-bottom-line-color($mdc-text-field-underline-on-light-idle);
  @include mdc-text-field-hover-bottom-line-color($mdc-text-field-underline-on-light);
  @include mdc-text-field-focused-bottom-line-color(primary);
  @include mdc-text-field-ink-color(text-primary-on-light);
  @include mdc-text-field-label-color($mdc-text-field-light-label);
  @include mdc-text-field-helper-text-color(text-hint-on-light);

  // Outline specific colors
  @include mdc-text-field-outline-stroke-color($mdc-text-field-outlined-idle-border);
  @include mdc-text-field-hover-outline-stroke-color($mdc-text-field-outlined-hover-border);
  @include mdc-text-field-focused-outline-stroke-color(primary);

  display: inline-block;
  position: relative;
  margin-bottom: 8px;
  will-change: opacity, transform, color;
}

.mdc-text-field__input {
  @include mdc-typography-base;
  // We use only a subset of the MDC typography values here as changing things such as line-height
  // affects how the labels are transformed.
  // TODO: Re-add setting the font-size from mdc-typography-styles (currently
  // setting it here has no effect because it is overriden by the font-size
  // given below).
  @each $prop in (letter-spacing) {
    #{$prop}: map-get(map-get($mdc-typography-styles, subheading2), $prop);
  }

  width: 100%;
  padding: 0 0 8px;
  transition: mdc-text-field-transition(opacity);
  border: none;
  border-bottom: 1px solid;
  border-radius: 0;
  background: none;
  font-size: inherit;
  appearance: none;

  &::placeholder {
    transition: mdc-text-field-transition(color);
    opacity: 1;
  }

  &:focus {
    outline: none;
  }

  // Remove red outline on firefox
  &:invalid {
    box-shadow: none;
  }

  @include mdc-theme-dark {
    border-bottom: 1px solid $mdc-text-field-underline-on-dark-idle;

    &:hover {
      border-bottom: 1px solid;
    }

    &::placeholder {
      @include mdc-theme-prop(color, text-hint-on-dark);
    }

    &:focus::placeholder {
      @include mdc-theme-prop(color, $mdc-text-field-dark-placeholder);
    }
  }
}

// Move label when text-field gets autofilled in Chrome
.mdc-text-field__input {
  // stylelint-disable plugin/selector-bem-pattern
  &:-webkit-autofill + .mdc-text-field__label {
    transform: translateY(-100%) scale(.75, .75);
    cursor: auto;
  }
  // stylelint-enable plugin/selector-bem-pattern
}

.mdc-text-field--outlined {
  height: 56px;
  border: none;

  // stylelint-disable plugin/selector-bem-pattern

  .mdc-text-field__input {
    display: flex;
    height: 30px;
    padding: 12px;
    border: none;
    background-color: transparent;
    z-index: 1;

    &:hover ~ .mdc-text-field__idle-outline {
      border: 1px solid;
    }
  }

  .mdc-text-field__label {
    @include mdc-rtl-reflexive-position(left, 16px);

    position: absolute;
    bottom: 20px;
    transition: transform 260ms ease;

    &--float-above {
      transform: scale(.75) translateY(-170%);

      &.mdc-text-field__label--shake {
        animation: invalid-shake-float-above-outlined 250ms 1;
      }
    }
  }

  .mdc-text-field__icon {
    z-index: 2;

    &:hover ~ .mdc-text-field__idle-outline {
      border: 1px solid;
    }
  }

  &.mdc-text-field--focused .mdc-text-field__idle-outline,
  .mdc-text-field__label--float-above ~ .mdc-text-field__idle-outline {
    opacity: 0;
  }

  &.mdc-text-field--focused .mdc-text-field__outline,
  .mdc-text-field__label--float-above ~ .mdc-text-field__outline {
    opacity: 1;
  }

  &.mdc-text-field--focused .mdc-text-field__outline-path {
    stroke-width: 2px;
  }

  &.mdc-text-field--disabled {
    @include mdc-text-field-outline-disabled_;
  }

  &.mdc-text-field--dense {
    height: 48px;

    .mdc-text-field__input {
      padding: 12px 12px 7px;
    }

    .mdc-text-field__label {
      bottom: 18px;

      &--float-above {
        transform: translateY(calc(-122% - 2px)) scale(.923);

        // stylelint-disable max-nesting-depth
        // stylelint-disable-next-line selector-max-specificity
        &.mdc-text-field__label--shake {
          animation: invalid-shake-float-above-outlined-dense 250ms 1;
        }
        // stylelint-enable max-nesting-depth
      }
    }

    .mdc-text-field__icon {
      top: 12px;
    }
  }
  // stylelint-enable plugin/selector-bem-pattern
}

.mdc-text-field--box {
  @include mdc-ripple-surface;
  @include mdc-states(text-primary-on-light, $has-nested-focusable-element: true);
  @include mdc-ripple-radius;
  @include mdc-text-field-box-corner-radius($mdc-text-field-border-radius);

  display: inline-flex;
  position: relative;
  height: 56px;
  margin-top: 16px;
  background-color: $mdc-text-field-box-background;
  overflow: hidden;

  @include mdc-theme-dark(".mdc-text-field", true) {
    background-color: $mdc-text-field-box-background-dark;
  }

  @include mdc-theme-dark(".mdc-text-field", true) {
    @include mdc-states(text-primary-on-dark, $has-nested-focusable-element: true);
  }

  // NOTE: For some reason, stylelint complains that the patterns below don't follow BEM.
  // However, it seems to emit the wrong selector for that pattern. Thus, we disable it above where
  // we would normally disable it (on combined selectors) as a workaround.

  // stylelint-disable plugin/selector-bem-pattern
  .mdc-text-field__input {
    align-self: flex-end;
    box-sizing: border-box;
    height: 100%;
    padding: 20px 16px 0;
  }

  .mdc-text-field__label {
    @include mdc-rtl-reflexive-position(left, 16px);

    position: absolute;
    bottom: 20px;
    width: calc(100% - #{$mdc-text-field-icon-padding});
    color: $mdc-text-field-box-secondary-text;
    text-overflow: ellipsis;
    white-space: nowrap;
    pointer-events: none;
    overflow: hidden;
    // Force the label into its own layer to prevent to prevent visible layer promotion adjustments
    // when the ripple is activated behind it.
    will-change: transform;

    @include mdc-theme-dark(".mdc-text-field") {
      @include mdc-theme-prop(color, text-secondary-on-dark);
    }

    &--float-above {
      transform: translateY(-50%) scale(.75, .75);
    }
  }

  .mdc-text-field__label--float-above {
    &.mdc-text-field__label--shake {
      animation: invalid-shake-float-above-box 250ms 1;
    }
  }

  &.mdc-text-field--disabled {
    @include mdc-text-field-box-disabled_;
  }

  &.mdc-text-field--dense {
    .mdc-text-field__input {
      padding: 12px 12px 0;
    }

    .mdc-text-field__label {
      bottom: 20px;

      &--float-above {
        transform: translateY(calc(-75% - 2px)) scale(.923, .923);
      }
    }
  }
  // stylelint-enable plugin/selector-bem-pattern
}

.mdc-text-field--with-leading-icon {
  .mdc-text-field__input {
    @include mdc-rtl-reflexive-property(padding, $mdc-text-field-icon-padding, $mdc-text-field-icon-position);
  }

  .mdc-text-field__icon {
    @include mdc-rtl-reflexive-position(left, $mdc-text-field-icon-position);
  }

  .mdc-text-field__label {
    @include mdc-rtl-reflexive-position(left, $mdc-text-field-icon-padding);
  }

  // stylelint-disable plugin/selector-bem-pattern
  &.mdc-text-field--outlined {
    .mdc-text-field__label--float-above {
      transform: scale(.75) translateX(-36%) translateY(-170%);

      @include mdc-rtl {
        transform: scale(.75) translateX(36%) translateY(-170%);
      }
    }

    &.mdc-text-field--dense {
      .mdc-text-field__label--float-above {
        transform: translateX(-25%) translateY(-145%) scale(.923);

        // stylelint-disable max-nesting-depth
        @include mdc-rtl {
          transform: translateX(25%) translateY(-145%) scale(.923);
        }
        // stylelint-enable max-nesting-depth
      }
    }
  }
  // stylelint-enable plugin/selector-bem-pattern
}

.mdc-text-field--with-trailing-icon {
  .mdc-text-field__input {
    @include mdc-rtl-reflexive-property(padding, $mdc-text-field-icon-position, $mdc-text-field-icon-padding);
  }

  .mdc-text-field__icon {
    @include mdc-rtl-reflexive-position(right, $mdc-text-field-icon-position);
  }
}

// stylelint-disable plugin/selector-bem-pattern
.mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__icon,
.mdc-text-field--with-trailing-icon.mdc-text-field--dense .mdc-text-field__icon {
  bottom: 16px;
  transform: scale(.8);
}

.mdc-text-field--with-leading-icon.mdc-text-field--dense {
  .mdc-text-field__input {
    @include mdc-rtl-reflexive-property(padding, $mdc-text-field-dense-icon-padding, $mdc-text-field-dense-icon-position);
  }

  .mdc-text-field__icon {
    @include mdc-rtl-reflexive-position(left, $mdc-text-field-dense-icon-position);
  }

  .mdc-text-field__label {
    @include mdc-rtl-reflexive-position(left, $mdc-text-field-dense-icon-padding);
  }
}

.mdc-text-field--with-trailing-icon.mdc-text-field--dense {
  .mdc-text-field__input {
    @include mdc-rtl-reflexive-property(padding, $mdc-text-field-dense-icon-position, $mdc-text-field-dense-icon-padding);
  }

  .mdc-text-field__icon {
    @include mdc-rtl-reflexive-position(right, $mdc-text-field-dense-icon-position);
  }
}
// stylelint-enable plugin/selector-bem-pattern

.mdc-text-field--upgraded:not(.mdc-text-field--fullwidth):not(.mdc-text-field--box) {
  display: inline-flex;
  position: relative;
  align-items: flex-end;
  box-sizing: border-box;
  margin-top: 16px;

  // stylelint-disable-next-line selector-max-specificity
  &:not(.mdc-text-field--textarea):not(.mdc-text-field--outlined) {
    height: 48px;
  }

  .mdc-text-field__label {
    pointer-events: none;
  }
}

.mdc-text-field--invalid {
  @include mdc-text-field-invalid_;
}

// stylelint-disable plugin/selector-bem-pattern

.mdc-text-field--invalid.mdc-text-field--textarea {
  border-color: $mdc-text-field-error-on-light;
}

// stylelint-enable plugin/selector-bem-pattern

.mdc-text-field--dense {
  margin-top: 12px;
  margin-bottom: 4px;
  font-size: .813rem;

  .mdc-text-field__label--float-above {
    // NOTE: This is an eyeball'd approximation of what's in the mocks.
    transform: translateY(calc(-100% - 2px)) scale(.923, .923);
  }
}

.mdc-text-field--disabled {
  @include mdc-text-field-disabled_;
}

@include mdc-required-text-field-label-asterix_ {
  margin-left: 1px;
  content: "*";
}

.mdc-text-field--focused {
  @include mdc-text-field-focused_;
}

.mdc-text-field--textarea {
  @include mdc-text-field-textarea-corner-radius($mdc-text-field-border-radius);

  $padding-inset: 16px;
  $label-offset-y: $padding-inset + 2;
  $label-offset-x: $padding-inset;

  display: flex;
  width: fit-content;
  height: initial;
  transition: none;
  border: 1px solid $mdc-textarea-border-on-light;
  overflow: hidden;

  @include mdc-theme-dark(".mdc-text-field") {
    border-color: $mdc-textarea-border-on-dark;
  }

  // stylelint-disable plugin/selector-bem-pattern
  .mdc-text-field__input {
    margin: 0;
    padding: $padding-inset;
    padding-top: $padding-inset * 2;
    border: 1px solid transparent;

    &:focus {
      @include mdc-theme-prop(border-color, primary);
    }

    &:invalid:not(:focus) {
      border-color: $mdc-text-field-error-on-light;
    }

    @include mdc-theme-dark(".mdc-text-field") {
      &:hover {
        border-bottom-color: transparent;
      }

      &:focus {
        @include mdc-theme-prop(border-color, secondary);
      }

      &:invalid:not(:focus) {
        border-color: $mdc-text-field-error-on-dark;
      }
    }
  }

  .mdc-text-field__label {
    @include mdc-rtl-reflexive-position(left, 1px);

    top: $label-offset-y;
    bottom: auto;
    padding: 8px 16px;
    background-color: $mdc-textarea-light-background;
    line-height: 1.15;

    @include mdc-theme-dark(".mdc-text-field") {
      background-color: $mdc-textarea-dark-background;
    }

    &--float-above {
      // Translate above the top of the input, and compensate for the amount of offset needed
      // to position the label within the bounds of the inset padding.
      // Note that the scale factor is an eyeball'd approximation of what's shown in the mocks.
      transform: translateY(-50%) scale(.923, .923);
    }
  }

  &.mdc-text-field--disabled {
    @include mdc-text-field-textarea-disabled_;
  }

  &:not(.mdc-text-field--upgraded) {
    .mdc-text-field__input {
      padding-top: $padding-inset;
    }
  }
}

.mdc-text-field--textarea.mdc-text-field--focused {
  @include mdc-theme-prop(border-color, primary);
}

// stylelint-enable plugin/selector-bem-pattern

.mdc-text-field--fullwidth {
  width: 100%;

  // stylelint-disable plugin/selector-bem-pattern

  &:not(.mdc-text-field--textarea) {
    display: block;
    box-sizing: border-box;
    height: 56px;
    margin: 0;
    border: none;
    border-bottom: 1px solid $mdc-text-field-divider-on-light;
    outline: none;

    .mdc-text-field__input {
      width: 100%;
      height: 100%;
      padding: 0;
      resize: none;
      // Use !important here to override all other border treatments
      border: none !important;
    }
  }

  .mdc-text-field__input {
    resize: vertical;
  }

  @include mdc-theme-dark {
    border-bottom: 1px solid $mdc-text-field-divider-on-dark;
  }

  // stylelint-enable plugin/selector-bem-pattern
}

// Graceful degredation for css-only inputs

.mdc-text-field {
  &:not(.mdc-text-field--upgraded) .mdc-text-field__input {
    border-bottom: 1px solid $mdc-text-field-divider-on-light;

    &:focus {
      @include mdc-theme-prop(border-color, primary);
    }

    &:disabled {
      @include mdc-theme-prop(color, $mdc-text-field-light-placeholder);

      border-bottom-style: dotted;
    }

    // stylelint-disable selector-max-specificity
    &:invalid:not(:focus) {
      border-color: $mdc-text-field-error-on-light;
    }
    // stylelint-enable selector-max-specificity
  }

  @include mdc-theme-dark {
    &:not(.mdc-text-field--upgraded) .mdc-text-field__input {
      &:not(:focus) {
        border-color: $mdc-text-field-underline-on-dark-idle;
      }

      &:disabled {
        @include mdc-theme-prop(color, $mdc-text-field-dark-placeholder);

        border-color: $mdc-text-field-disabled-border-on-dark;
        background-color: $mdc-textarea-disabled-background-on-dark;
      }

      // stylelint-disable selector-max-specificity
      &:invalid:not(:focus) {
        border-color: $mdc-text-field-error-on-dark;
      }
      // stylelint-enable selector-max-specificity
    }
  }
}

.mdc-text-field--outlined:not(.mdc-text-field--upgraded) {
  height: 56px;

  .mdc-text-field__input {
    @include mdc-text-field-outlined-corner-radius($mdc-text-field-border-radius);

    height: 100%;
    padding: 0 0 0 12px;
    border: 1px solid $mdc-text-field-outlined-idle-border;

    &:hover {
      border-color: $mdc-text-field-outlined-hover-border;
    }

    &:focus {
      @include mdc-theme-prop(border-color, primary);
    }
  }
}

.mdc-text-field--box:not(.mdc-text-field--upgraded) {
  height: 56px;

  &::before,
  &::after {
    border-radius: 0;
  }

  .mdc-text-field__input {
    padding-top: 0;
  }
}
// postcss-bem-linter: end

// postcss-bem-linter: define text-field-helper-text

.mdc-text-field-helper-text {
  // stylelint-disable plugin/selector-bem-pattern
  .mdc-text-field--dense + & {
    margin-bottom: 4px;
  }

  .mdc-text-field--box + & {
    margin-right: 16px;
    margin-left: 16px;
  }

  // stylelint-enable plugin/selector-bem-pattern
}

// postcss-bem-linter: end

// mdc-form-field tweaks to align text field label correctly
// stylelint-disable selector-max-type
.mdc-form-field > .mdc-text-field + label {
  align-self: flex-start;
}
// stylelint-enable selector-max-type
